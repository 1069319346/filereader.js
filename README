filereader.js
A small library independant wrapper for the JavaScript FileReader interface

FileReader is an interface that allows JavaScript to read data from Files or Blobs into memory.
See http://dev.w3.org/2006/webapi/FileAPI/#FileReader-interface for basic information
See http://dev.w3.org/2006/webapi/FileAPI/#event-summary for details on Options/on.* callbacks

Usage:
FileReaderJS.setupInput(input, opts);
FileReaderJS.setupDrop(element, opts); 
See demo.html for a (slightly) more complete example.

If you have jQuery:
$(input).fileReaderJS(opts);

Options:
	readAs: 'ArrayBuffer' | 'BinaryString' | 'Text' | 'DataURL' (default)
	accept: A regex string to match the contenttype of a given file.
			For example: 'image/*' to only accept images.
			on.skip will be called when a file does not match the filter.
	dragClass: A CSS class to add onto the element called with setupDrop while dragging
	on: 
		loadstart: function(e, file) { }
		progress: function(e, file) { }
		load: function(e, file) { }
		abort: function(e, file) { }
		error: function(e, file) { }
		loadend: function(e, file) { }
		skip: function(file) { } Called only when a read has been skipped because of the accept string
		groupstart: function(groupID, files) { } 
		groupend: function(groupID, files) { } 

What it isn't:
* A drag and drop file uploader.  If you wish to upload the files to a server, search for 'javascript drag and drop file upload' online.  There are plugins that do exactly this.

Future changes (hopefully):
* Once FileReaderSync in implemented in browsers, provide this as an option to provide a non-blocking way to read files using Web Workers.  See http://www.w3.org/TR/FileAPI/#FileReaderSync and https://bugs.webkit.org/show_bug.cgi?id=41567.

Any contributions welcome.  This plugin is open source under the MIT License.
Author: Brian Grinstead
